<?xml version="1.0" encoding="utf-8"?>
<DirectedGraph Background="#FF202030" BackgroundImage="Icons\Green Sea Turtle.jpg" GraphDirection="TopToBottom" Layout="Sugiyama" ZoomLevel="-1" xmlns="http://schemas.microsoft.com/vs/2009/dgml">
  <Nodes>
    <Node Id=".NET" Category="Group" Bounds="194.819986730475,227.880094150534,222.420007527669,141.9203" Group="Expanded" />
    <Node Id=".NetGroupPatterns" Bounds="214.819986730475,323.840294150534,118.083333333333,25.96" Description="This is the group pattern XML data" Reference=".NET4.0\grouppatterns.xml" />
    <Node Id=".NetGrouped" Bounds="308.696660924811,267.880194150534,88.5433333333333,25.96" Description="This is the top level graph if you collapse all containers" Reference=".NET4.0\Grouped.dgml" />
    <Node Id=".NetRaw" Bounds="214.819987544277,267.880194150534,63.8766666666667,25.96" Description="This shows .NET 4.0 binary dependencies grouped by 'patterns'" Reference=".NET4.0\Assemblies.dgml" />
    <Node Id="Baseball" Bounds="20,95.96,63.3299999999999,25.96" Description="This demo is great for showing force directed layout" Reference="conditionalstyles\baseball.dgml" />
    <Node Id="Call Sequence" Bounds="373.58,40,94.03,25.96" Description="This demo shows a hyperthetical call sequence graph in DGML, it also shows some nice coloring schemes" Reference="conditionalstyles\CallSequence.dgml" />
    <Node Id="Collapsed" Bounds="467.239994258145,323.840294150534,71.8699999999999,25.96" Description="This is the top level graph if you collapse all containers" Reference="vsbinaries\devdiv-just-group.dgml" />
    <Node Id="ConditionalStyles" Category="Group" Bounds="0,0,203.436666666666,197.88" Group="Expanded" Label="ConditionalStyles" />
    <Node Id="Coverage" Bounds="113.33,95.96,70.1066666666667,25.96" Description="This demo shows a how annotations can be styled.  It shows code coverage annotations on progression, where red is bad, orange is ok and green is good. The interesting thing is it helps you see clusters of poor coverage to help direct testing efforts.  This is using a nice Linq expression on the &lt;Style&gt; tag." Reference="conditionalstyles\Coverage.dgml" />
    <Node Id="GraphModel" Bounds="636.456666666666,40,86.4133333333334,25.96" Description="This is the progression graph model" Reference="Progression\GraphModel.dgml" />
    <Node Id="GraphModel Grouped" Bounds="679.82,95.96,136.323333333333,25.96" Description="This is the progression graph model grouped into semantic areas" Reference="Progression\GraphModelGrouped.dgml" />
    <Node Id="Group Patterns" Bounds="569.109997920254,323.840294150534,99.45,25.96" Description="This is the group pattern XML data" Reference="vsbinaries\grouppatterns.xml" />
    <Node Id="Grouped" Bounds="547.240006058275,267.880194150534,66.6233333333334,25.96" Description="This shows vs binary dependencies grouped by 'patterns'" Reference="vsbinaries\devdiv-grouped.dgml" />
    <Node Id="LinesOfCode" Bounds="20,151.92,87.3233333333333,25.96" Description="This demo shows a how boxes can be scaled with styles to show a property (in this case lines of code)" Reference="conditionalstyles\LinesOfCode.dgml" />
    <Node Id="Overview" Bounds="537.61,40,68.8466666666666,25.96" Description="This demo shows Progression architecture " Reference="progression\overview.dgml" />
    <Node Id="PX4Topics" Bounds="740.594997920254,273.799602050781,76.0033333333333,25.96" Label="PX4 Topics" Reference="StateMachines\PX4_topics.dgml"/>
    <Node Id="Progression" Category="Group" Bounds="517.61,0,318.533333333333,197.88" Group="Expanded" Label="Progression" />
    <Node Id="ProgressionAssemblies" Bounds="537.61,151.92,141.13,25.96" Description="This is the progression assembly dependency graph" Reference="Progression\ProgressionAssemblies.dgml" />
    <Node Id="ProgressionTypes" Bounds="537.61,95.96,112.21,25.96" Description="This is the progression type dependency graph" Reference="Progression\ProgressionTypes.dgml" />
    <Node Id="Raw" Bounds="467.239996699551,267.880194150534,50.0000000000001,25.96" Description="This is the raw data" Reference="vsbinaries\devdiv-ungrouped.dgml" />
    <Node Id="Sample Code" Bounds="253.436666666666,40,90.1433333333333,25.96" Description="This the C# source code that we are looking at" Reference="TeamArch\Program.cs" />
    <Node Id="Sequence DGML" Bounds="253.436666666666,151.92,107.753333333333,25.96" Description="This raw DGML behind a sequence diagram - reverse engineered from code" Reference="TeamArch\SequenceDiagram.dgml" />
    <Node Id="Set" Bounds="20,40,50,25.96" Description="This demo shows 'semantic icons' in a program showing UI/Model/Network classes" Reference="conditionalstyles\set.dgml" />
    <Node Id="StateMachines" Bounds="718.559997920254,233.799502050781,120.073333333333,85.9602" Group="Expanded" Label="State Machines" UseManualLocation="True" />
    <Node Id="Tagging" Category="Obsolete" Bounds="100,40,61.9433333333333,25.96" Description="Can be used for tagging demo" Reference="ConditionalStyles\Tagging.dgml" />
    <Node Id="TeamArch" Category="Group" Bounds="233.436666666666,0,254.173333333333,197.88" Group="Expanded" Label="Modeling" />
    <Node Id="UmlMetaModel" Bounds="253.436666666666,95.96,102.77,25.96" Description="This a reverse engineered diagram of Microsoft.VisualStudio.Uml.dll" Reference="TeamArch\UmlMetaModel.dgml" />
    <Node Id="VS" Category="Group" Bounds="447.239994258145,227.880094150534,241.320003662109,141.9203" Group="Expanded" />
    <Node Id="WPF" Category="Group" Bounds="-0.173346602857535,227.880159889405,164.993333333333,141.9203" Group="Expanded" Label="WPF" />
    <Node Id="WPF Raw" Bounds="19.8266576696033,267.880259889405,69.0333333333333,25.96" Description="This raw WPF class dependency graph" Reference="WPF\wpf-raw.dgml" />
    <Node Id="WPF by Namespace" Bounds="19.8266533971425,323.840359889405,124.993333333333,25.96" Description="This is the WPF class dependencies organized by graph" Reference="WPF\wpf-by-namespace.dgml" />
  </Nodes>
  <Links>
    <Link Source=".NET" Target=".NetGroupPatterns" Category="Contains" />
    <Link Source=".NET" Target=".NetGrouped" Category="Contains" />
    <Link Source=".NET" Target=".NetRaw" Category="Contains" />
    <Link Source="ConditionalStyles" Target="Baseball" Category="Contains" />
    <Link Source="ConditionalStyles" Target="Coverage" Category="Contains" />
    <Link Source="ConditionalStyles" Target="LinesOfCode" Category="Contains" />
    <Link Source="ConditionalStyles" Target="Set" Category="Contains" />
    <Link Source="ConditionalStyles" Target="Tagging" Category="Contains" />
    <Link Source="Progression" Target="GraphModel" Category="Contains" />
    <Link Source="Progression" Target="GraphModel Grouped" Category="Contains" />
    <Link Source="Progression" Target="Overview" Category="Contains" />
    <Link Source="Progression" Target="ProgressionAssemblies" Category="Contains" />
    <Link Source="Progression" Target="ProgressionTypes" Category="Contains" />
    <Link Source="StateMachines" Target="PX4Topics" Category="Contains" />
    <Link Source="TeamArch" Target="Call Sequence" Category="Contains" />
    <Link Source="TeamArch" Target="Sample Code" Category="Contains" />
    <Link Source="TeamArch" Target="Sequence DGML" Category="Contains" />
    <Link Source="TeamArch" Target="UmlMetaModel" Category="Contains" />
    <Link Source="VS" Target="Collapsed" Category="Contains" />
    <Link Source="VS" Target="Group Patterns" Category="Contains" />
    <Link Source="VS" Target="Grouped" Category="Contains" />
    <Link Source="VS" Target="Raw" Category="Contains" />
    <Link Source="WPF" Target="WPF Raw" Category="Contains" />
    <Link Source="WPF" Target="WPF by Namespace" Category="Contains" />
  </Links>
  <Categories>
    <Category Id="Contains" Label="Contains" Description="Whether the source of the link contains the target object" CanBeDataDriven="False" CanLinkedNodesBeDataDriven="True" IncomingActionLabel="Contained By" IsContainment="True" OutgoingActionLabel="Contains" />
    <Category Id="Group" Label="Group" CanBeDataDriven="True" DefaultAction="Microsoft.Contains" IsProviderRoot="False" NavigationActionLabel="Groups" />
    <Category Id="Obsolete" Label="Obsolete" />
  </Categories>
  <Properties>
    <Property Id="Background" Label="Background" Description="The background color" DataType="System.Windows.Media.Brush" />
    <Property Id="BackgroundImage" DataType="System.String" />
    <Property Id="Bounds" DataType="System.Windows.Rect" />
    <Property Id="CanBeDataDriven" Label="CanBeDataDriven" Description="CanBeDataDriven" DataType="System.Boolean" />
    <Property Id="CanLinkedNodesBeDataDriven" Label="CanLinkedNodesBeDataDriven" Description="CanLinkedNodesBeDataDriven" DataType="System.Boolean" />
    <Property Id="DefaultAction" Label="DefaultAction" Description="DefaultAction" DataType="System.String" />
    <Property Id="Description" Label="Description" Description="Description" DataType="System.String" />
    <Property Id="Expression" DataType="System.String" />
    <Property Id="GraphDirection" DataType="Microsoft.VisualStudio.Diagrams.Layout.LayoutOrientation" />
    <Property Id="Group" Label="Group" Description="Display the node as a group" DataType="Microsoft.VisualStudio.GraphModel.GraphGroupStyle" />
    <Property Id="IncomingActionLabel" Label="IncomingActionLabel" Description="IncomingActionLabel" DataType="System.String" />
    <Property Id="IsContainment" DataType="System.Boolean" />
    <Property Id="IsEnabled" DataType="System.Boolean" />
    <Property Id="IsProviderRoot" Label="IsProviderRoot" Description="IsProviderRoot" DataType="System.Boolean" />
    <Property Id="IsReference" Label="IsReference" Description="Annotation to make a property into a reference property" DataType="System.Boolean" />
    <Property Id="Label" Label="Label" Description="Displayable label of an Annotatable object" DataType="System.String" />
    <Property Id="Layout" DataType="System.String" />
    <Property Id="NavigationActionLabel" Label="NavigationActionLabel" Description="NavigationActionLabel" DataType="System.String" />
    <Property Id="OutgoingActionLabel" Label="OutgoingActionLabel" Description="OutgoingActionLabel" DataType="System.String" />
    <Property Id="Reference" Label="Reference" Description="Reference" DataType="System.String" IsReference="True" />
    <Property Id="TargetType" DataType="System.Type" />
    <Property Id="UseManualLocation" DataType="System.Boolean" />
    <Property Id="Value" DataType="System.String" />
    <Property Id="ZoomLevel" DataType="System.String" />
  </Properties>
  <Styles>
    <Style TargetType="Node">
      <Condition Expression="HasCategory('Group')" />
      <Setter Property="Background" Value="#A0A0A0C0" />
      <Setter Property="Foreground" Value="#FFFF00" />
    </Style>
    <Style TargetType="Node">
      <Setter Property="Background" Value="#A0A0C0C0" />
    </Style>
  </Styles>
</DirectedGraph>